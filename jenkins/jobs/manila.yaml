- job:
    name: gate-manila-tempest-dsvm-neutron-postgres
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_POSTGRES=1
          export ENABLED_SERVICES=tempest

          if [[ $ZUUL_BRANCH = "stable/juno" ]]; then
              # Juno version uses 'hooks' approach that requires explicit
              # enabling of services.
              ENABLED_SERVICES+=,manila,m-api,m-shr,m-sch
          else
              # Enable manila devstack plugin. Provided repo should be cloned by zuul before devstack run
              # and below provided link should not be used.
              export DEVSTACK_LOCAL_CONFIG="enable_plugin manila git://git.openstack.org/openstack/manila"
          fi

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {
              source $BASE/new/manila/contrib/ci/pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              # Configure and run tempest on singlebackend manila installation
              source $BASE/new/manila/contrib/ci/post_test_hook.sh singlebackend
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log


- job:
    name: gate-manila-tempest-dsvm-neutron
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export ENABLED_SERVICES=tempest

          if [[ $ZUUL_BRANCH = "stable/juno" ]]; then
              # Juno version uses 'hooks' approach that requires explicit
              # enabling of services.
              ENABLED_SERVICES+=,manila,m-api,m-shr,m-sch
          else
              # Enable manila devstack plugin. Provided repo should be cloned by zuul before devstack run
              # and below provided link should not be used.
              export DEVSTACK_LOCAL_CONFIG="enable_plugin manila git://git.openstack.org/openstack/manila"
          fi

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {
              source $BASE/new/manila/contrib/ci/pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              # Configure and run tempest on singlebackend manila installation
              source $BASE/new/manila/contrib/ci/post_test_hook.sh singlebackend
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log


- job:
    name: gate-manila-tempest-dsvm-neutron-multibackend
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export ENABLED_SERVICES=tempest

          if [[ $ZUUL_BRANCH = "stable/juno" ]]; then
              # Juno version uses 'hooks' approach that requires explicit
              # enabling of services.
              ENABLED_SERVICES+=,manila,m-api,m-shr,m-sch
          else
              # Enable manila devstack plugin. Provided repo should be cloned by zuul before devstack run
              # and below provided link should not be used.
              export DEVSTACK_LOCAL_CONFIG="enable_plugin manila git://git.openstack.org/openstack/manila"
          fi

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {
              source $BASE/new/manila/contrib/ci/pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              # Configure and run tempest on multibackend manila installation
              source $BASE/new/manila/contrib/ci/post_test_hook.sh multibackend
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log


- job:
    name: gate-manila-tempest-dsvm-neutron-no-share-servers
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export ENABLED_SERVICES=tempest

          if [[ $ZUUL_BRANCH = "stable/juno" ]]; then
              # Juno version uses 'hooks' approach that requires explicit
              # enabling of services.
              ENABLED_SERVICES+=,manila,m-api,m-shr,m-sch
          else
              # Enable manila devstack plugin. Provided repo should be cloned by zuul before devstack run
              # and below provided link should not be used.
              export DEVSTACK_LOCAL_CONFIG="enable_plugin manila git://git.openstack.org/openstack/manila"
          fi

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {
              # Configure devstack to run manila installation without handling of share servers
              source $BASE/new/manila/contrib/ci/pre_test_hook.sh False
          }
          export -f pre_test_hook

          function post_test_hook {
              # Configure and run tempest on singlebackend manila installation
              source $BASE/new/manila/contrib/ci/post_test_hook.sh singlebackend
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log


- job:
    name: gate-manilaclient-dsvm-neutron-functional
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1

          if [[ $ZUUL_BRANCH = "stable/juno" ]]; then
              # Juno version uses 'hooks' approach that requires explicit
              # enabling of services.
              ENABLED_SERVICES+=,manila,m-api,m-shr,m-sch
          else
              # Enable manila devstack plugin. Provided repo should be cloned by zuul before devstack run
              # and below provided link should not be used.
              export DEVSTACK_LOCAL_CONFIG="enable_plugin manila git://git.openstack.org/openstack/manila"
          fi

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {
              source $BASE/new/python-manilaclient/contrib/ci/pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              # Configure and run functional tests
              source $BASE/new/python-manilaclient/contrib/ci/post_test_hook.sh
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - console-log

- job:
    name: gate-manila-tempest-dsvm-neutron-scenario
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export ENABLED_SERVICES=tempest

          if [[ $ZUUL_BRANCH = "stable/juno" ]]; then
              # Juno version uses 'hooks' approach that requires explicit
              # enabling of services.
              ENABLED_SERVICES+=,manila,m-api,m-shr,m-sch
          else
              # Enable manila devstack plugin. Provided repo should be cloned by zuul before devstack run
              # and below provided link should not be used.
              export DEVSTACK_LOCAL_CONFIG="enable_plugin manila git://git.openstack.org/openstack/manila"
          fi

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {
              source $BASE/new/manila/contrib/ci/pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              # Configure and run tempest on singlebackend manila installation
              source $BASE/new/manila/contrib/ci/post_test_hook.sh singlebackend
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: 'gate-manila-buildimage-{os-element}'
    node: 'bare-precise || bare-trusty'

    builders:
      - link-logs
      - net-info
      - gerrit-git-prep
      - shell: |
          #!/bin/bash -xe
          export MANILA_IMG_OS={os-element}
          tox -e buildimage
          mv manila-service-image.qcow2 $WORKSPACE/{os-element}.qcow2

    publishers:
      - scp:
          site: 'tarballs.openstack.org'
          files:
            - source: '{os-element}.qcow2'
              target: 'tarballs/manila-image-elements/images'
              keep-hierarchy: false
              copy-after-failure: false
      - console-log


- job:
    name: gate-manila-tempest-dsvm-tempest-plugin
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export ENABLED_SERVICES=tempest

          # Enable manila devstack plugin. Provided repo should be cloned by zuul before devstack run
          # and below provided link should not be used.
          export DEVSTACK_LOCAL_CONFIG="enable_plugin manila git://git.openstack.org/openstack/manila"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {
              source $BASE/new/manila/contrib/ci/pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              # Configure and run tempest on singlebackend manila installation
              source $BASE/new/manila/contrib/ci/post_test_hook.sh singlebackend
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log


- job:
    name: gate-manila-tempest-dsvm-glusterfs
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export ENABLED_SERVICES=tempest
          export PROJECTS="stackforge/devstack-plugin-glusterfs $PROJECTS"

          if [[ $ZUUL_BRANCH = "stable/juno" ]]; then
              # Juno version uses 'hooks' approach that requires explicit
              # enabling of services.
              ENABLED_SERVICES+=,manila,m-api,m-shr,m-sch
          else
              # Enable manila devstack plugin. Provided repo should be cloned by zuul before devstack run
              # and below provided link should not be used.
              export DEVSTACK_LOCAL_CONFIG="enable_plugin manila git://git.openstack.org/openstack/manila"
          fi

          # Enable devstack-plugin-glusterfs plugin, to install and configure GlusterFS.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin devstack-plugin-glusterfs git://git.openstack.org/stackforge/devstack-plugin-glusterfs"

          # Configure devstack-plugin-glusterfs to enable GlusterFS as a backend for Manila.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"CONFIGURE_GLUSTERFS_MANILA=True"

          # Configure devstack-plugin-glusterfs to disable GlusterFS as a backend for Cinder.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"CONFIGURE_GLUSTERFS_CINDER=False"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"CINDER_ENABLED_BACKENDS=lvm:lvmdriver-1"

          # Configure devstack-plugin-glusterfs to disable GlusterFS as a backend for Nova.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"CONFIGURE_GLUSTERFS_NOVA=False"

          # Configure devstack-plugin-glusterfs to disable GlusterFS as a backend for Glance.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"CONFIGURE_GLUSTERFS_GLANCE=False"

          # Configure devstack-plugin-glusterfs to use glusterfs driver.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"GLUSTERFS_MANILA_DRIVER_TYPE=glusterfs"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {
              # Configure devstack to run manila installation without handling of share servers
              source $BASE/new/devstack-plugin-glusterfs/manila/pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              # Configure and run tempest on singlebackend manila installation
              source $BASE/new/devstack-plugin-glusterfs/manila/post_test_hook.sh singlebackend
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log


- job:
    name: gate-manila-tempest-dsvm-glusterfs-native
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export ENABLED_SERVICES=tempest
          export PROJECTS="stackforge/devstack-plugin-glusterfs $PROJECTS"

          if [[ $ZUUL_BRANCH = "stable/juno" ]]; then
              # Juno version uses 'hooks' approach that requires explicit
              # enabling of services.
              ENABLED_SERVICES+=,manila,m-api,m-shr,m-sch
          else
              # Enable manila devstack plugin. Provided repo should be cloned by zuul before devstack run
              # and below provided link should not be used.
              export DEVSTACK_LOCAL_CONFIG="enable_plugin manila git://git.openstack.org/openstack/manila"
          fi

          # Enable devstack-plugin-glusterfs plugin, to install and configure GlusterFS.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin devstack-plugin-glusterfs git://git.openstack.org/stackforge/devstack-plugin-glusterfs"

          # Configure devstack-plugin-glusterfs to enable GlusterFS as a backend for Manila.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"CONFIGURE_GLUSTERFS_MANILA=True"

          # Configure devstack-plugin-glusterfs to disable GlusterFS as a backend for Cinder.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"CONFIGURE_GLUSTERFS_CINDER=False"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"CINDER_ENABLED_BACKENDS=lvm:lvmdriver-1"

          # Configure devstack-plugin-glusterfs to disable GlusterFS as a backend for Nova.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"CONFIGURE_GLUSTERFS_NOVA=False"

          # Configure devstack-plugin-glusterfs to disable GlusterFS as a backend for Glance.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"CONFIGURE_GLUSTERFS_GLANCE=False"

          # Configure devstack-plugin-glusterfs to use glusterfs-native driver.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"GLUSTERFS_MANILA_DRIVER_TYPE=glusterfs-native"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {
              # Configure devstack to run manila installation without handling of share servers
              source $BASE/new/devstack-plugin-glusterfs/manila/pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              # Configure and run tempest on singlebackend manila installation
              source $BASE/new/devstack-plugin-glusterfs/manila/post_test_hook.sh singlebackend
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log


- job:
    name: gate-manila-tempest-dsvm-hdfs
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export ENABLED_SERVICES=tempest
          export PROJECTS="openstack/devstack-plugin-hdfs $PROJECTS"

          # Enable manila devstack plugin. Provided repo should be cloned by zuul before devstack run
          # and below provided link should not be used.
          export DEVSTACK_LOCAL_CONFIG="enable_plugin manila git://git.openstack.org/openstack/manila"

          # Enable devstack-plugin-glusterfs plugin, to install and configure GlusterFS.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin devstack-plugin-hdfs git://git.openstack.org/openstack/devstack-plugin-hdfs"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {
              # Configure devstack to run manila installation without handling of share servers
              source $BASE/new/devstack-plugin-hdfs/manila/pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              # Configure and run tempest on singlebackend manila installation
              source $BASE/new/devstack-plugin-hdfs/manila/post_test_hook.sh
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log
